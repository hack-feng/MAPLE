# 开放端口8082
server.port=8044

# 开启aop
spring.aop.auto=true

# 配置mysql数据库-------------------------------------------
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/maple?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root

# 配置mybatis-plus的xml和bean的目录
mybatis-plus.type-aliases-package=com.maple.demo.bean
mybatis-plus.mapper-locations=classpath:mapper/*.xml

# 配置spring session----------------------------------------

# 指定redis实现spring session
spring.session.store-type=redis
# Session 过期时间，单位s
spring.session.timeout=600
# Sessions 刷新模式
spring.session.redis.flush-mode=on_save
# Namespace for keys used to store sessions.
spring.session.redis.namespace=


# 配置redis的链接信息----------------------------------------
# Redis数据库索引（默认为0 redis有16个库）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接密码（默认为空）
spring.redis.password=
# Redis服务器连接端口
spring.redis.port=6379
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.maxActive=300
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.maxWait=10000
# 连接池中的最大空闲连接
spring.redis.pool.maxIdle=50
# 连接池中的最小空闲连接
spring.redis.pool.minIdle=10
# 连接超时时间（毫秒）
spring.redis.timeout=5000


# 配置发送邮件的信息-----------------------------------------
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.qq.com
#发送者的邮箱账号
spring.mail.username=1150640979@qq.com
#发送者的邮箱授权码，不是邮箱密码
spring.mail.password=
#端口
spring.mail.port=25
#协议
spring.mail.protocol=smtp


# 配置rabbitmq的信息---------------------------------------
spring.application.name=Spring-boot-rabbitmq
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=123456


# 配置文件上传----------------------------------------------
# 上传文件总的最大值
spring.servlet.multipart.max-request-size=10MB
# 单个文件的最大值
spring.servlet.multipart.max-file-size=10MB



# 配置druid数据库连接池---------------------------------------
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
